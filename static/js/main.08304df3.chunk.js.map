{"version":3,"sources":["Components/Phonebook.jsx","App.js","reportWebVitals.js","index.js"],"names":["Phonebook","state","contacts","id","name","number","filter","this","item","toLowerCase","includes","find","window","alert","setState","nanoid","value","onChange","e","currentTarget","type","pattern","title","required","onClick","addContact","filterContacts","map","contact","Component","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qSAKMA,E,kDACJ,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,SAAU,CACR,CAAEC,GAAI,OAAQC,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEF,GAAI,OAAQC,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEF,GAAI,OAAQC,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEF,GAAI,OAAQC,KAAM,iBAAkBC,OAAQ,cAEhDC,OAAQ,GACRF,KAAM,GACNC,OAAQ,IAXE,E,kDAcd,WAAkB,IAAD,OACf,MAA0B,KAAtBE,KAAKN,MAAMK,OACNC,KAAKN,MAAMC,SAEXK,KAAKN,MAAMC,SAASI,QAAO,SAAAE,GAAI,OACpCA,EAAKJ,KAAKK,cAAcC,SAAS,EAAKT,MAAMK,OAAOG,oB,wBAIzD,WAAc,IAAD,OACX,GACEF,KAAKN,MAAMC,SAASS,MAClB,SAAAH,GAAI,OAAIA,EAAKJ,KAAKK,gBAAkB,EAAKR,MAAMG,KAAKK,iBAGtD,OAAOG,OAAOC,MAAP,UAAgBN,KAAKN,MAAMG,KAA3B,4BAEPG,KAAKO,SAAS,CACZZ,SAAS,GAAD,mBACHK,KAAKN,MAAMC,UADR,CAEN,CACEC,GAAIY,cACJX,KAAMG,KAAKN,MAAMG,KACjBC,OAAQE,KAAKN,MAAMI,UAIvBD,KAAM,GACNC,OAAQ,O,oBAId,WAAU,IAAD,OACP,OACE,gCACE,yCACA,uBACEW,MAAOT,KAAKN,MAAMG,KAClBa,SAAU,SAAAC,GAAC,OAAI,EAAKJ,SAAS,CAAEV,KAAMc,EAAEC,cAAcH,SACrDI,KAAK,OACLhB,KAAK,OACLiB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,IAEV,2CACA,uBACEP,MAAOT,KAAKN,MAAMI,OAClBY,SAAU,SAAAC,GAAC,OAAI,EAAKJ,SAAS,CAAET,OAAQa,EAAEC,cAAcH,SACvDI,KAAK,MACLhB,KAAK,SACLiB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,IAEV,wBACEH,KAAK,SACLI,QAAS,SAAAN,GACP,EAAKO,cAHT,yBAQA,0CACA,uDACA,uBACET,MAAOT,KAAKN,MAAMK,OAClBW,SAAU,SAAAC,GAAC,OAAI,EAAKJ,SAAS,CAAER,OAAQY,EAAEC,cAAcH,SACvDI,KAAK,OACLhB,KAAK,OACLiB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,IAEV,6BACGhB,KAAKmB,iBAAiBC,KAAI,SAAAC,GAAO,OAChC,+BACGA,EAAQxB,KADX,KACmBwB,EAAQvB,OAAQ,IACjC,wBACEe,KAAK,SACLI,QAAS,SAAAN,GACP,EAAKJ,SAAS,CACZZ,SAAU,EAAKD,MAAMC,SAASI,QAC5B,SAAAE,GAAI,OAAIA,EAAKL,KAAOyB,EAAQzB,SALpC,sBAFOyB,EAAQzB,gB,GA3FL0B,aCMTC,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCMSC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.08304df3.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport style from './Phonebook.module.css';\r\nimport { nanoid } from 'nanoid';\r\n\r\nclass Phonebook extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      contacts: [\r\n        { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n        { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n        { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n        { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n      ],\r\n      filter: '',\r\n      name: '',\r\n      number: '',\r\n    };\r\n  }\r\n  filterContacts() {\r\n    if (this.state.filter === '') {\r\n      return this.state.contacts;\r\n    } else {\r\n      return this.state.contacts.filter(item =>\r\n        item.name.toLowerCase().includes(this.state.filter.toLowerCase()),\r\n      );\r\n    }\r\n  }\r\n  addContact() {\r\n    if (\r\n      this.state.contacts.find(\r\n        item => item.name.toLowerCase() === this.state.name.toLowerCase(),\r\n      )\r\n    ) {\r\n      return window.alert(`${this.state.name} is already in contacts`);\r\n    } else {\r\n      this.setState({\r\n        contacts: [\r\n          ...this.state.contacts,\r\n          {\r\n            id: nanoid(),\r\n            name: this.state.name,\r\n            number: this.state.number,\r\n          },\r\n        ],\r\n\r\n        name: '',\r\n        number: '',\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <label>Name</label>\r\n        <input\r\n          value={this.state.name}\r\n          onChange={e => this.setState({ name: e.currentTarget.value })}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          required\r\n        />\r\n        <label>Number</label>\r\n        <input\r\n          value={this.state.number}\r\n          onChange={e => this.setState({ number: e.currentTarget.value })}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          required\r\n        />\r\n        <button\r\n          type=\"button\"\r\n          onClick={e => {\r\n            this.addContact();\r\n          }}\r\n        >\r\n          Add contact\r\n        </button>\r\n        <h2>Contacts</h2>\r\n        <h3>Find contacts by name</h3>\r\n        <input\r\n          value={this.state.filter}\r\n          onChange={e => this.setState({ filter: e.currentTarget.value })}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          required\r\n        />\r\n        <ul>\r\n          {this.filterContacts().map(contact => (\r\n            <li key={contact.id}>\r\n              {contact.name}: {contact.number}{' '}\r\n              <button\r\n                type=\"button\"\r\n                onClick={e => {\r\n                  this.setState({\r\n                    contacts: this.state.contacts.filter(\r\n                      item => item.id !== contact.id,\r\n                    ),\r\n                  });\r\n                }}\r\n              >\r\n                Delete\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport { Phonebook };\r\n","import React from 'react';\nimport { Phonebook } from './Components/Phonebook.jsx';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Phonebook />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}