(this["webpackJsonpgoit-react-hw-02-phonebook"]=this["webpackJsonpgoit-react-hw-02-phonebook"]||[]).push([[0],{14:function(t,e,n){},15:function(t,e,n){},17:function(t,e,n){"use strict";n.r(e);var a=n(1),r=n.n(a),s=n(3),c=n.n(s),i=(n(14),n(6)),o=n(4),u=n(5),d=n(8),l=n(7),h=(n(15),n(9)),m=n(0),b=function(t){Object(d.a)(n,t);var e=Object(l.a)(n);function n(){var t;return Object(o.a)(this,n),(t=e.call(this)).state={contacts:[{id:"id-1",name:"Rosie Simpson",number:"459-12-56"},{id:"id-2",name:"Hermione Kline",number:"443-89-12"},{id:"id-3",name:"Eden Clements",number:"645-17-79"},{id:"id-4",name:"Annie Copeland",number:"227-91-26"}],filter:"",name:"",number:""},t}return Object(u.a)(n,[{key:"filterContacts",value:function(){var t=this;return""===this.state.filter?this.state.contacts:this.state.contacts.filter((function(e){return e.name.toLowerCase().includes(t.state.filter.toLowerCase())}))}},{key:"addContact",value:function(){var t=this;if(this.state.contacts.find((function(e){return e.name.toLowerCase()===t.state.name.toLowerCase()})))return window.alert("".concat(this.state.name," is already in contacts"));this.setState({contacts:[].concat(Object(i.a)(this.state.contacts),[{id:Object(h.a)(),name:this.state.name,number:this.state.number}]),name:"",number:""})}},{key:"render",value:function(){var t=this;return Object(m.jsxs)("div",{children:[Object(m.jsx)("label",{children:"Name"}),Object(m.jsx)("input",{value:this.state.name,onChange:function(e){return t.setState({name:e.currentTarget.value})},type:"text",name:"name",pattern:"^[a-zA-Z\u0430-\u044f\u0410-\u042f]+(([' -][a-zA-Z\u0430-\u044f\u0410-\u042f ])?[a-zA-Z\u0430-\u044f\u0410-\u042f]*)*$",title:"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan",required:!0}),Object(m.jsx)("label",{children:"Number"}),Object(m.jsx)("input",{value:this.state.number,onChange:function(e){return t.setState({number:e.currentTarget.value})},type:"tel",name:"number",pattern:"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}",title:"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +",required:!0}),Object(m.jsx)("button",{type:"button",onClick:function(e){t.addContact()},children:"Add contact"}),Object(m.jsx)("h2",{children:"Contacts"}),Object(m.jsx)("h3",{children:"Find contacts by name"}),Object(m.jsx)("input",{value:this.state.filter,onChange:function(e){return t.setState({filter:e.currentTarget.value})},type:"text",name:"name",pattern:"^[a-zA-Z\u0430-\u044f\u0410-\u042f]+(([' -][a-zA-Z\u0430-\u044f\u0410-\u042f ])?[a-zA-Z\u0430-\u044f\u0410-\u042f]*)*$",title:"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan",required:!0}),Object(m.jsx)("ul",{children:this.filterContacts().map((function(e){return Object(m.jsxs)("li",{children:[e.name,": ",e.number," ",Object(m.jsx)("button",{type:"button",onClick:function(n){t.setState({contacts:t.state.contacts.filter((function(t){return t.id!==e.id}))})},children:"Delete"})]},e.id)}))})]})}}]),n}(a.Component);var j=function(){return Object(m.jsx)("div",{className:"App",children:Object(m.jsx)(b,{})})},p=function(t){t&&t instanceof Function&&n.e(3).then(n.bind(null,18)).then((function(e){var n=e.getCLS,a=e.getFID,r=e.getFCP,s=e.getLCP,c=e.getTTFB;n(t),a(t),r(t),s(t),c(t)}))};c.a.render(Object(m.jsx)(r.a.StrictMode,{children:Object(m.jsx)(j,{})}),document.getElementById("root")),p()}},[[17,1,2]]]);
//# sourceMappingURL=main.08304df3.chunk.js.map